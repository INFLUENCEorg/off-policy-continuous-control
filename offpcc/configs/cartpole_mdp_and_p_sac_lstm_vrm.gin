import basics.actors_and_critics

basics.actors_and_critics.make_MLP.hidden_dimensions = (256, 256)

import algorithms.sac_lstm

algorithms.sac_lstm.SAC_LSTM.hidden_size = 256
algorithms.sac_lstm.SAC_LSTM.gamma = 0.99
algorithms.sac_lstm.SAC_LSTM.alpha = 0.2
algorithms.sac_lstm.SAC_LSTM.lr = 3e-4
algorithms.sac_lstm.SAC_LSTM.polyak = 0.995

import basics.replay_buffer_recurrent

basics.replay_buffer_recurrent.RecurrentReplayBuffer.max_episode_len = 1_000
basics.replay_buffer_recurrent.RecurrentReplayBuffer.num_bptt = 10             # enough for cartpole & cartpole p
basics.replay_buffer_recurrent.RecurrentReplayBuffer.capacity = 1_000
basics.replay_buffer_recurrent.RecurrentReplayBuffer.batch_size = 10           # num_bptt * batch_size = 100 (identical to non-recurrent SAC)

import basics.run_utils

basics.run_utils.train.max_steps_per_episode = 1000  # should match with gym timeout

basics.run_utils.train.num_epochs = 300
basics.run_utils.train.num_steps_per_epoch = 1_000
basics.run_utils.train.update_every = 50
basics.run_utils.train.num_test_episodes_per_epoch = 1
basics.run_utils.train.update_after = 1_000             # 1000 / 50 = around 20 random episodes